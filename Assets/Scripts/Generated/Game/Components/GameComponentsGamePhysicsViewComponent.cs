//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity componentsGamePhysicsViewEntity { get { return GetGroup(GameMatcher.ComponentsGamePhysicsView).GetSingleEntity(); } }
    public Components.Game.PhysicsViewComponent componentsGamePhysicsView { get { return componentsGamePhysicsViewEntity.componentsGamePhysicsView; } }
    public bool hasComponentsGamePhysicsView { get { return componentsGamePhysicsViewEntity != null; } }

    public GameEntity SetComponentsGamePhysicsView(UnityEngine.Rigidbody2D newValue) {
        if (hasComponentsGamePhysicsView) {
            throw new Entitas.EntitasException("Could not set ComponentsGamePhysicsView!\n" + this + " already has an entity with Components.Game.PhysicsViewComponent!",
                "You should check if the context already has a componentsGamePhysicsViewEntity before setting it or use context.ReplaceComponentsGamePhysicsView().");
        }
        var entity = CreateEntity();
        entity.AddComponentsGamePhysicsView(newValue);
        return entity;
    }

    public void ReplaceComponentsGamePhysicsView(UnityEngine.Rigidbody2D newValue) {
        var entity = componentsGamePhysicsViewEntity;
        if (entity == null) {
            entity = SetComponentsGamePhysicsView(newValue);
        } else {
            entity.ReplaceComponentsGamePhysicsView(newValue);
        }
    }

    public void RemoveComponentsGamePhysicsView() {
        componentsGamePhysicsViewEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.Game.PhysicsViewComponent componentsGamePhysicsView { get { return (Components.Game.PhysicsViewComponent)GetComponent(GameComponentsLookup.ComponentsGamePhysicsView); } }
    public bool hasComponentsGamePhysicsView { get { return HasComponent(GameComponentsLookup.ComponentsGamePhysicsView); } }

    public void AddComponentsGamePhysicsView(UnityEngine.Rigidbody2D newValue) {
        var index = GameComponentsLookup.ComponentsGamePhysicsView;
        var component = (Components.Game.PhysicsViewComponent)CreateComponent(index, typeof(Components.Game.PhysicsViewComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsGamePhysicsView(UnityEngine.Rigidbody2D newValue) {
        var index = GameComponentsLookup.ComponentsGamePhysicsView;
        var component = (Components.Game.PhysicsViewComponent)CreateComponent(index, typeof(Components.Game.PhysicsViewComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsGamePhysicsView() {
        RemoveComponent(GameComponentsLookup.ComponentsGamePhysicsView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsGamePhysicsView;

    public static Entitas.IMatcher<GameEntity> ComponentsGamePhysicsView {
        get {
            if (_matcherComponentsGamePhysicsView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsGamePhysicsView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsGamePhysicsView = matcher;
            }

            return _matcherComponentsGamePhysicsView;
        }
    }
}
