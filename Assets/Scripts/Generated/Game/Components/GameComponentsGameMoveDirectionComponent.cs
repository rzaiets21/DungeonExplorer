//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity componentsGameMoveDirectionEntity { get { return GetGroup(GameMatcher.ComponentsGameMoveDirection).GetSingleEntity(); } }
    public Components.Game.MoveDirectionComponent componentsGameMoveDirection { get { return componentsGameMoveDirectionEntity.componentsGameMoveDirection; } }
    public bool hasComponentsGameMoveDirection { get { return componentsGameMoveDirectionEntity != null; } }

    public GameEntity SetComponentsGameMoveDirection(UnityEngine.Vector2 newValue) {
        if (hasComponentsGameMoveDirection) {
            throw new Entitas.EntitasException("Could not set ComponentsGameMoveDirection!\n" + this + " already has an entity with Components.Game.MoveDirectionComponent!",
                "You should check if the context already has a componentsGameMoveDirectionEntity before setting it or use context.ReplaceComponentsGameMoveDirection().");
        }
        var entity = CreateEntity();
        entity.AddComponentsGameMoveDirection(newValue);
        return entity;
    }

    public void ReplaceComponentsGameMoveDirection(UnityEngine.Vector2 newValue) {
        var entity = componentsGameMoveDirectionEntity;
        if (entity == null) {
            entity = SetComponentsGameMoveDirection(newValue);
        } else {
            entity.ReplaceComponentsGameMoveDirection(newValue);
        }
    }

    public void RemoveComponentsGameMoveDirection() {
        componentsGameMoveDirectionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.Game.MoveDirectionComponent componentsGameMoveDirection { get { return (Components.Game.MoveDirectionComponent)GetComponent(GameComponentsLookup.ComponentsGameMoveDirection); } }
    public bool hasComponentsGameMoveDirection { get { return HasComponent(GameComponentsLookup.ComponentsGameMoveDirection); } }

    public void AddComponentsGameMoveDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.ComponentsGameMoveDirection;
        var component = (Components.Game.MoveDirectionComponent)CreateComponent(index, typeof(Components.Game.MoveDirectionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsGameMoveDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.ComponentsGameMoveDirection;
        var component = (Components.Game.MoveDirectionComponent)CreateComponent(index, typeof(Components.Game.MoveDirectionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsGameMoveDirection() {
        RemoveComponent(GameComponentsLookup.ComponentsGameMoveDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsGameMoveDirection;

    public static Entitas.IMatcher<GameEntity> ComponentsGameMoveDirection {
        get {
            if (_matcherComponentsGameMoveDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsGameMoveDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsGameMoveDirection = matcher;
            }

            return _matcherComponentsGameMoveDirection;
        }
    }
}
