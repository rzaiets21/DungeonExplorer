//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity componentsInputMoveInputEntity { get { return GetGroup(InputMatcher.ComponentsInputMoveInput).GetSingleEntity(); } }
    public Components.Input.MoveInputComponent componentsInputMoveInput { get { return componentsInputMoveInputEntity.componentsInputMoveInput; } }
    public bool hasComponentsInputMoveInput { get { return componentsInputMoveInputEntity != null; } }

    public InputEntity SetComponentsInputMoveInput(UnityEngine.Vector2 newValue) {
        if (hasComponentsInputMoveInput) {
            throw new Entitas.EntitasException("Could not set ComponentsInputMoveInput!\n" + this + " already has an entity with Components.Input.MoveInputComponent!",
                "You should check if the context already has a componentsInputMoveInputEntity before setting it or use context.ReplaceComponentsInputMoveInput().");
        }
        var entity = CreateEntity();
        entity.AddComponentsInputMoveInput(newValue);
        return entity;
    }

    public void ReplaceComponentsInputMoveInput(UnityEngine.Vector2 newValue) {
        var entity = componentsInputMoveInputEntity;
        if (entity == null) {
            entity = SetComponentsInputMoveInput(newValue);
        } else {
            entity.ReplaceComponentsInputMoveInput(newValue);
        }
    }

    public void RemoveComponentsInputMoveInput() {
        componentsInputMoveInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Components.Input.MoveInputComponent componentsInputMoveInput { get { return (Components.Input.MoveInputComponent)GetComponent(InputComponentsLookup.ComponentsInputMoveInput); } }
    public bool hasComponentsInputMoveInput { get { return HasComponent(InputComponentsLookup.ComponentsInputMoveInput); } }

    public void AddComponentsInputMoveInput(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.ComponentsInputMoveInput;
        var component = (Components.Input.MoveInputComponent)CreateComponent(index, typeof(Components.Input.MoveInputComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsInputMoveInput(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.ComponentsInputMoveInput;
        var component = (Components.Input.MoveInputComponent)CreateComponent(index, typeof(Components.Input.MoveInputComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsInputMoveInput() {
        RemoveComponent(InputComponentsLookup.ComponentsInputMoveInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherComponentsInputMoveInput;

    public static Entitas.IMatcher<InputEntity> ComponentsInputMoveInput {
        get {
            if (_matcherComponentsInputMoveInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.ComponentsInputMoveInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherComponentsInputMoveInput = matcher;
            }

            return _matcherComponentsInputMoveInput;
        }
    }
}
